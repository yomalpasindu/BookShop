// <auto-generated />
using BookShop.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShop.DataAccess.Migrations
{
    [DbContext(typeof(BookShopDbContext))]
    partial class BookShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookShop.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Martin Wickramasinghe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "F. Scott Fitzgerald"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Harper Lee"
                        },
                        new
                        {
                            Id = 4,
                            Name = "George Orwell"
                        });
                });

            modelBuilder.Entity("BookShop.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "Famous Book in Sri Lanka",
                            Discount = 0,
                            Name = "Madolduwa",
                            Price = 500
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CategoryId = 2,
                            Description = "A Journey into Tranquility",
                            Discount = 10,
                            Name = "Serenity's Embrace",
                            Price = 650
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CategoryId = 1,
                            Description = "Timeless Epic Adventure",
                            Discount = 5,
                            Name = "Echoes of Eternity",
                            Price = 750
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CategoryId = 3,
                            Description = "Mystical Tales of the Unknown",
                            Discount = 15,
                            Name = "Whispers in the Wind",
                            Price = 600
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CategoryId = 2,
                            Description = "Fate Unveiled",
                            Discount = 8,
                            Name = "Chronicles of Destiny",
                            Price = 700
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CategoryId = 1,
                            Description = "A Tale of Love and Loss",
                            Discount = 12,
                            Name = "Silent Echo",
                            Price = 550
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CategoryId = 3,
                            Description = "Visions of Imagination",
                            Discount = 0,
                            Name = "Ephemeral Dreams",
                            Price = 800
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CategoryId = 2,
                            Description = "A Rollercoaster of Feelings",
                            Discount = 10,
                            Name = "Whirlwind of Emotions",
                            Price = 680
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "Blood-Pumping Thrills",
                            Discount = 5,
                            Name = "Crimson Skies",
                            Price = 720
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2,
                            CategoryId = 3,
                            Description = "Radiant Tales of Hope",
                            Discount = 8,
                            Name = "Luminescent Horizon",
                            Price = 590
                        });
                });

            modelBuilder.Entity("BookShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Novel",
                            Discount = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Transtalions",
                            Discount = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Kids",
                            Discount = 5
                        });
                });

            modelBuilder.Entity("BookShop.Models.Book", b =>
                {
                    b.HasOne("BookShop.Models.Author", "Author")
                        .WithMany("Book")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookShop.Models.Category", "Category")
                        .WithMany("Book")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookShop.Models.Author", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookShop.Models.Category", b =>
                {
                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
